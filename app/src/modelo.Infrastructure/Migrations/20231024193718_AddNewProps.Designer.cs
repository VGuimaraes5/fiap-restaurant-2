// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using modelo.Infrastructure.DataProviders;

#nullable disable

namespace modelo.Infrastructure.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20231024193718_AddNewProps")]
    partial class AddNewProps
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("modelo.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("tb_Categoria", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ada751db-8553-493f-b308-70bd29aed106"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Lanche"
                        },
                        new
                        {
                            Id = new Guid("cf412102-35da-43d8-9c3c-b72546104c72"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Acompanhamento"
                        },
                        new
                        {
                            Id = new Guid("5117243c-b007-49e8-9a30-842ec79248ae"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Bebida"
                        },
                        new
                        {
                            Id = new Guid("32f0c5f0-d9ba-40e2-8d7a-57eed4727e2b"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sobremesa"
                        });
                });

            modelBuilder.Entity("modelo.Domain.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserId")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("tb_Cliente", (string)null);
                });

            modelBuilder.Entity("modelo.Domain.Entities.ItemPedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacao");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("tb_ItemPedido", (string)null);
                });

            modelBuilder.Entity("modelo.Domain.Entities.Pagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId")
                        .IsUnique();

                    b.ToTable("tb_Pagamento", (string)null);
                });

            modelBuilder.Entity("modelo.Domain.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Senha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("tb_Pedido", (string)null);
                });

            modelBuilder.Entity("modelo.Domain.Entities.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(19,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("tb_Produto", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1b95a886-6ad4-4c66-8545-54c18581e6d8"),
                            CategoriaId = new Guid("ada751db-8553-493f-b308-70bd29aed106"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Hamburguer",
                            Valor = 8.00m
                        },
                        new
                        {
                            Id = new Guid("a1a04257-77ee-4563-a8d9-8c3021ba7c8b"),
                            CategoriaId = new Guid("ada751db-8553-493f-b308-70bd29aed106"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Cheeseburger",
                            Valor = 9.00m
                        },
                        new
                        {
                            Id = new Guid("c5c25af9-0307-4ef0-b844-0bf51de8f649"),
                            CategoriaId = new Guid("ada751db-8553-493f-b308-70bd29aed106"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "X Salada",
                            Valor = 10.00m
                        },
                        new
                        {
                            Id = new Guid("62409637-121f-4562-87e9-560542d77d19"),
                            CategoriaId = new Guid("ada751db-8553-493f-b308-70bd29aed106"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "X Bacon",
                            Valor = 11.00m
                        },
                        new
                        {
                            Id = new Guid("ca1f0063-f2b1-43cd-875e-781d106cc4ea"),
                            CategoriaId = new Guid("ada751db-8553-493f-b308-70bd29aed106"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "X Tudo",
                            Valor = 12.00m
                        },
                        new
                        {
                            Id = new Guid("2bf5af6c-a749-4b93-ad2b-953babc5839d"),
                            CategoriaId = new Guid("cf412102-35da-43d8-9c3c-b72546104c72"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Batata Frita Pequena",
                            Valor = 5.00m
                        },
                        new
                        {
                            Id = new Guid("d5549cbc-2a02-4916-a6a5-f2ba3cd54e7a"),
                            CategoriaId = new Guid("cf412102-35da-43d8-9c3c-b72546104c72"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Batata Frita Media",
                            Valor = 7.00m
                        },
                        new
                        {
                            Id = new Guid("8d7f1172-61c3-438a-a057-5f2061c1c3d2"),
                            CategoriaId = new Guid("cf412102-35da-43d8-9c3c-b72546104c72"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Batata Frita Grande",
                            Valor = 9.00m
                        },
                        new
                        {
                            Id = new Guid("f68c30ce-310c-4ef1-b6ce-073ee14d7f5a"),
                            CategoriaId = new Guid("cf412102-35da-43d8-9c3c-b72546104c72"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Chicken Nuggets 4 unidades",
                            Valor = 6.00m
                        },
                        new
                        {
                            Id = new Guid("a6687d79-89a7-4ca3-80b7-ca9a55fe067c"),
                            CategoriaId = new Guid("cf412102-35da-43d8-9c3c-b72546104c72"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Chicken Nuggets 8 unidades",
                            Valor = 12.00m
                        },
                        new
                        {
                            Id = new Guid("284ed7d3-cf72-4ea0-a41e-6f965f381b5c"),
                            CategoriaId = new Guid("cf412102-35da-43d8-9c3c-b72546104c72"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Chicken Nuggets 12 unidades",
                            Valor = 16.00m
                        },
                        new
                        {
                            Id = new Guid("c513fb2e-5dcf-4a31-9a58-a56a99d4f0db"),
                            CategoriaId = new Guid("5117243c-b007-49e8-9a30-842ec79248ae"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Coca Cola Pequena",
                            Valor = 6.00m
                        },
                        new
                        {
                            Id = new Guid("f144ec42-3f01-4bda-a74b-ee6c599c5412"),
                            CategoriaId = new Guid("5117243c-b007-49e8-9a30-842ec79248ae"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Coca Cola Media",
                            Valor = 8.00m
                        },
                        new
                        {
                            Id = new Guid("caf5eed0-329f-4e9d-8b7d-ac958989bef3"),
                            CategoriaId = new Guid("5117243c-b007-49e8-9a30-842ec79248ae"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Coca Cola Grande",
                            Valor = 10.00m
                        },
                        new
                        {
                            Id = new Guid("5368d28c-f961-4602-aa79-8eb919409d5b"),
                            CategoriaId = new Guid("32f0c5f0-d9ba-40e2-8d7a-57eed4727e2b"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sorverte de Baunilha",
                            Valor = 3.00m
                        },
                        new
                        {
                            Id = new Guid("1a1a3a8a-e18e-4f3f-b8c7-d8d6cfbe82c4"),
                            CategoriaId = new Guid("32f0c5f0-d9ba-40e2-8d7a-57eed4727e2b"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sorverte de Chocolate",
                            Valor = 3.00m
                        },
                        new
                        {
                            Id = new Guid("926f17e3-14e4-40d4-8017-d964671b14e2"),
                            CategoriaId = new Guid("32f0c5f0-d9ba-40e2-8d7a-57eed4727e2b"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sorverte de Misto",
                            Valor = 3.00m
                        },
                        new
                        {
                            Id = new Guid("74076fa6-84d1-4941-8142-73ae0af5d56e"),
                            CategoriaId = new Guid("32f0c5f0-d9ba-40e2-8d7a-57eed4727e2b"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sundae de Baunilha",
                            Valor = 6.00m
                        },
                        new
                        {
                            Id = new Guid("e7b3de7c-bce1-43b9-98bc-1430cd1ef5b5"),
                            CategoriaId = new Guid("32f0c5f0-d9ba-40e2-8d7a-57eed4727e2b"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sundae de Chocolate",
                            Valor = 6.00m
                        },
                        new
                        {
                            Id = new Guid("537cd5cb-7c63-497f-bf8f-936525917629"),
                            CategoriaId = new Guid("32f0c5f0-d9ba-40e2-8d7a-57eed4727e2b"),
                            DataAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataCriacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Sundae Misto",
                            Valor = 6.00m
                        });
                });

            modelBuilder.Entity("modelo.Domain.Entities.ItemPedido", b =>
                {
                    b.HasOne("modelo.Domain.Entities.Pedido", "Pedido")
                        .WithMany("ItensPedido")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("modelo.Domain.Entities.Produto", "Produto")
                        .WithMany("ItensPedido")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("modelo.Domain.Entities.Pagamento", b =>
                {
                    b.HasOne("modelo.Domain.Entities.Pedido", "Pedido")
                        .WithOne("Pagamento")
                        .HasForeignKey("modelo.Domain.Entities.Pagamento", "PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("modelo.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("modelo.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("modelo.Domain.Entities.Produto", b =>
                {
                    b.HasOne("modelo.Domain.Entities.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("modelo.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("modelo.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("ItensPedido");

                    b.Navigation("Pagamento");
                });

            modelBuilder.Entity("modelo.Domain.Entities.Produto", b =>
                {
                    b.Navigation("ItensPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
